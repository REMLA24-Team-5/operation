---
- name: Setup Kubernetes Cluster
  hosts: all
  become: yes

  tasks:
    - name: Install dependencies
      apt:
        update_cache: yes
        name: ['apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common']
        state: present

- name: Install k3s on control-plane
  hosts: controller
  become: yes
  tasks:
    - name: Install k3s
      shell: |
        curl -sfL https://get.k3s.io | sh -s - server --node-external-ip={{ ansible_host }} --write-kubeconfig-mode=644
      args:
        creates: /etc/rancher/k3s/k3s.yaml

    - name: Set correct server address in kubeconfig
      replace:
        path: /etc/rancher/k3s/k3s.yaml
        regexp: 'server: https://127.0.0.1:6443'
        replace: 'server: https://192.168.56.10:6443'

    - name: Fetch k3s token to local machine
      fetch:
        src: /var/lib/rancher/k3s/server/node-token
        dest: ./k3s_token
        flat: yes

    - name: Fetch kubeconfig to local machine
      fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: ./k3s.yaml
        flat: yes

- name: Install dashboards on control-plane
  hosts: controller
  become: yes
  tasks:
    - name: Install Helm
      shell: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      args:
        creates: /usr/local/bin/helm

    - name: Add Helm repositories
      shell: |
        helm repo add prom-repo https://prometheus-community.github.io/helm-charts
        helm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard/
        helm repo update
    
    - name: Check if monitoring namespace exists
      shell: kubectl get namespace monitoring --ignore-not-found
      register: monitoring_namespace
      environment:
        KUBECONFIG: /vagrant/playbooks/k3s.yaml

    - name: Create monitoring namespace if not exists
      shell: kubectl create namespace monitoring
      when: monitoring_namespace.stdout == ""
      environment:
        KUBECONFIG: /vagrant/playbooks/k3s.yaml

    - name: Check if Helm release exists
      shell: helm list -n monitoring | grep myprom || true
      register: helm_release_check
      ignore_errors: true
      environment:
        KUBECONFIG: /vagrant/playbooks/k3s.yaml
    
    - name: Install Prometheus and Grafana
      shell: |
        kubectl apply -f /vagrant/playbooks/grafana-config.yaml -n monitoring 
        kubectl apply -f /vagrant/monitoring/monitoring.yml -n monitoring
        if helm list -n monitoring | grep myprom; then
          helm upgrade myprom prom-repo/kube-prometheus-stack --namespace monitoring -f /vagrant/kubernetes/grafana-value.yml -f /vagrant/kubernetes/prometheus-value.yml
        else
          helm install myprom prom-repo/kube-prometheus-stack --namespace monitoring -f /vagrant/kubernetes/grafana-value.yml -f /vagrant/kubernetes/prometheus-value.yml
        fi
      environment:
        KUBECONFIG: /vagrant/playbooks/k3s.yaml

- name: Set up istio
  hosts: controller
  become: yes
  tasks:
    - name: Curl istio 
      shell: |
        curl -L https://istio.io/downloadIstio | sh -

    - name: Set ISTIO_DIR fact
      shell: ls -d istio-*
      register: istio_dir_result

    - name: Set ISTIO_DIR variable
      set_fact:
        ISTIO_DIR: "{{ istio_dir_result.stdout }}"

    - name: Install istio
      shell: |
        sudo chown -R $USER:$USER {{ ISTIO_DIR }}
        cd {{ ISTIO_DIR }}
        export PATH=$PWD/bin:$PATH
        istioctl install --set profile=demo -y
      environment:
        KUBECONFIG: /vagrant/playbooks/k3s.yaml
        
    - name: Install istio addons
      shell: |
        cd {{ ISTIO_DIR }}
        kubectl apply -f ./samples/addons/prometheus.yaml
        kubectl apply -f ./samples/addons/jaeger.yaml
        kubectl apply -f ./samples/addons/kiali.yaml
      environment:
        KUBECONFIG: /vagrant/playbooks/k3s.yaml


- name: Install k3s on worker nodes
  hosts: workers
  become: yes
  tasks:
    - name: Get k3s token from local machine
      slurp:
        src: /vagrant/playbooks/k3s_token
      register: k3s_token

    - name: Join worker nodes to the cluster
      shell: |
        curl -sfL https://get.k3s.io | K3S_URL=https://{{ hostvars['controller'].ansible_host }}:6443 K3S_TOKEN={{ k3s_token['content'] | b64decode | regex_replace('\n', '')}} sh -s - agent --node-external-ip={{ ansible_host }}

- name: Setup cluster
  hosts: controller
  become: yes
  tasks:
    - name: Apply Kubernetes yml files
      shell: |
        kubectl apply -f /vagrant/kubernetes/environment.yml
        kubectl apply -f /vagrant/kubernetes/model-service.yml
        kubectl apply -f /vagrant/kubernetes/app.yml
        kubectl apply -f /vagrant/kubernetes/istio.yml
