---
- name: Setup Kubernetes Cluster
  hosts: all
  become: yes

  tasks:
    - name: Install dependencies
      apt:
        update_cache: yes
        name: ['apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common']
        state: present

- name: Install k3s on control-plane
  hosts: controller
  become: yes
  tasks:
    - name: Install k3s
      shell: |
        curl -sfL https://get.k3s.io | sh -s - server --node-ip={{ ansible_host }}
      args:
        creates: /etc/rancher/k3s/k3s.yaml

    - name: Fetch k3s token to local machine
      fetch:
        src: /var/lib/rancher/k3s/server/node-token
        dest: ./k3s_token
        flat: yes

    - name: Fetch kubeconfig to local machine
      fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: ./k3s.yaml
        flat: yes

    - name: Ensure .kube directory exists
      file:
        path: /home/vagrant/.kube
        state: directory
        mode: '0755'
        owner: vagrant
        group: vagrant

    - name: Copy kubeconfig to control-plane user home
      command: cp /etc/rancher/k3s/k3s.yaml /home/vagrant/.kube/config

    - name: Change ownership of kubeconfig
      file:
        path: /home/vagrant/.kube/config
        owner: vagrant
        group: vagrant
        mode: '0644'

- name: Install k3s on worker nodes
  hosts: workers
  become: yes
  tasks:
    - name: Get k3s token from local machine
      slurp:
        src: /vagrant/playbooks/k3s_token
      register: k3s_token

    - name: Ensure .kube directory exists
      file:
        path: /home/vagrant/.kube
        state: directory
        mode: '0755'
        owner: vagrant
        group: vagrant

    - name: copy ./k3s.yaml from local machine to worker nodes
      copy:
        content: "{{ lookup('file', './k3s.yaml') }}"
        dest: /home/vagrant/.kube/config

    - name: Change ownership of kubeconfig
      file:
        path: /home/vagrant/.kube/config
        owner: vagrant
        group: vagrant
        mode: '0644'

    - name: set correct api server
      replace:
        path: /home/vagrant/.kube/config
        regexp: 'server: https://127.0.0.1:6443'
        replace: 'server: https://192.168.56.10:6443'

    - name: Join worker nodes to the cluster
      shell: |
        curl -sfL https://get.k3s.io | K3S_URL=https://{{ hostvars['controller'].ansible_host }}:6443 K3S_TOKEN={{ k3s_token['content'] | b64decode | regex_replace('\n', '')}} sh -s - agent --node-ip={{ ansible_host }}

- name: Setup cluster
  hosts: controller
  become: yes
  tasks:
    - name: Export config
      shell: |
        export KUBECONFIG=~/.kube/config

    - name: Apply Kubernetes yml files
      shell: |
        kubectl apply -f ./../vagrant/kubernetes/environment.yml
        kubectl apply -f ./../vagrant/kubernetes/app.yml
        kubectl apply -f ./../vagrant/kubernetes/model-service.yml
        kubectl apply -f ../../vagrant/kubernetes/ingress.yml

- name: Install Helm and Deploy Monitoring Tools
  hosts: controller
  become: yes
  tasks:
    - name: Download and install Helm
      shell: |
        curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
        sudo apt-get install apt-transport-https --yes
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
        sudo apt-get update
        sudo apt-get install helm
    - name: Add Prometheus Repository
      command: helm repo add prom-repo https://prometheus-community.github.io/helm-charts

    - name: Update Helm repos
      command: helm repo update

    - name: Install Prometheus Stack
      command: helm install prometheus prom-repo/kube-prometheus-stack

    - name: Apply monitoring yaml files
      shell: |
        kubectl apply -f ../../vagrant/monitoring/monitoring.yaml
        kubectl apply -f ../../vagrant/monitoring/prometheus_rule.yml
        kubectl apply -f ../../vagrant/monitoring/alert_manager.yml
